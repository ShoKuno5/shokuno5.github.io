---
import { getCollection } from 'astro:content';
import PostLayout from '../../../layouts/PostLayout.astro';
import { getGitDatesForContentSync } from '../../../utils/gitDatesOptimized';
import { extractDateFromFilename } from '../../../utils/extractDateFromFilename';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ id }) => id.startsWith('ja/'));
  return posts.map((post) => ({
    params: { slug: post.slug.slice(3) }, // Remove 'ja/' prefix
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get dates with proper priority
const gitDates = getGitDatesForContentSync('posts', post.slug);
const filenameDate = extractDateFromFilename(post.slug);

// Priority: frontmatter date > filename date > git created date
const publishDate = post.data.date || filenameDate || gitDates?.created || new Date();

// For modified date, always use git modified if it exists and is different
let modifiedDate = post.data.modified;
if (!modifiedDate && gitDates?.modified) {
  // Always show git modified date if it's different from published date
  if (gitDates.modified.getTime() !== publishDate.getTime()) {
    modifiedDate = gitDates.modified;
  }
}
---

<PostLayout 
  title={post.data.title} 
  date={publishDate}
  modified={modifiedDate}
  tags={post.data.tags}
  description={post.data.summary}
  content={post.body}
>
  <Content />
</PostLayout>
